name: Build and Deploy Backend to ECS

on:
  push:
    # paths:
    #   - "backend/**"
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
           node-version: "20"

        - name: install and build server
          working-directory: ./backend
          run: |
            npm ci
            npm run build
          env:
            NODE_ENV: ${{ secrets.NODE_ENV }}
            CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
            PORT: ${{ secrets.PORT }}
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
            BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
            ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
            SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
            REGION: ${{ secrets.REGION }}
            CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
            CLOUDFRONT_URL: ${{ secrets.CLOUDFRONT_URL }}
            CLOUDFRONT_KEY_PAIR_ID: ${{ secrets.CLOUDFRONT_KEY_PAIR_ID }}
            CLOUDFRONT_PRIVATE_KEY: ${{ secrets.CLOUDFRONT_PRIVATE_KEY }}
            TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
            TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        
        - name: Build, Tag, and Push the Image to Amazon ECR
          working-directory: ./backend
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.IMAGE_REPO_NAME }}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


            
            
